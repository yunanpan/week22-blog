{"version":3,"sources":["constants/breakpoint.js","contexts.js","utils.js","components/Header/Header.js","WebApi.js","pages/HomePages/HomePage.js","pages/LoginPages/LoginPage.js","pages/PostPages/PostPage.js","pages/NewPostPages/NewPostPage.js","pages/AboutPages/AboutPage.js","pages/RegisterPages/RegisterPage.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["MEDIA_QUERY_SM","AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","Root","styled","div","Navbar","props","theme","colors","primaryLighter","NavTitle","primaryDark","fontSize","fontLarge","NavList","NavButton","Link","fontSmall","$active","Header","location","useLocation","history","useHistory","path","pathname","useContext","user","setUser","to","onClick","push","BASE_URL","getMe","fetch","headers","authorization","then","res","json","PostsWrapper","PostContainer","PostTitle","fontMedium","PostDate","primary","Post","post","id","title","Date","createdAt","toLocaleString","Pagination","setCurrentPage","currentPage","totalPages","handlePaginationClick","e","page","target","innerText","Number","length","PaginationWrapper","PaginationButton","map","index","button","primaryDarker","Loading","HomePage","useState","posts","setPosts","setTotalPages","isPostsLoading","setIsPostsLoading","useEffect","total","Math","ceil","i","limit","getPosts","ErrorMessage","LoginForm","form","primaryLight","LoginInputWrapper","LoginInputTitle","LoginInput","input","LoginButton","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","isLoadingLogin","setIsLoadingLogin","onSubmit","preventDefault","method","body","JSON","stringify","login","data","ok","message","response","type","value","onChange","PostWrapper","PostHeader","PostContent","PostPage","slug","useParams","setPost","NewPostForm","NewPostWrapper","NewPostTitle","NewPostInput","NewPostContent","textarea","NewPostButton","Error","NewPostPage","newPostTitle","setNewPostTitle","newPostContent","setNewPostContent","isSubmit","setIsSubmit","postPosts","placeholder","rows","AboutWrapper","AboutTitle","fontTitle","AboutContent","AboutPage","nickname","setNickname","register","App","isLoading","setIsLoading","Provider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e3160f4.chunk.js","sourcesContent":["export const MEDIA_QUERY_SM = \"@media only screen and (max-width: 768px)\";\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { MEDIA_QUERY_SM } from \"../../constants/breakpoint\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\n\nconst Root = styled.div``;\n\nconst Navbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  padding-left: 20px;\n  margin-bottom: 20px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.primaryLighter};\n  height: 52px;\n  line-height: 52px;\n\n  ${MEDIA_QUERY_SM} {\n    flex-direction: column;\n    padding-left: 0px;\n    line-height: 26px;\n  }\n`;\n\nconst NavTitle = styled.div`\n  color: ${(props) => props.theme.colors.primaryDark};\n  font-size: ${(props) => props.theme.fontSize.fontLarge};\n  font-style: italic;\n\n  ${MEDIA_QUERY_SM} {\n    text-align: center;\n  }\n`;\n\nconst NavList = styled.div`\n  display: flex;\n\n  ${MEDIA_QUERY_SM} {\n    justify-content: space-between;\n  }\n`;\n\nconst NavButton = styled(Link)`\n  display: block;\n  width: 100px;\n  text-align: center;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primaryDark};\n  font-size: ${(props) => props.theme.fontSize.fontSmall};\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: ${props.theme.colors.primaryLighter};\n  `}\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const path = location.pathname;\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") history.push(\"/\");\n  };\n\n  return (\n    <Root>\n      <Navbar>\n        <NavTitle>blog</NavTitle>\n        <NavList>\n          <NavButton $active={path === \"/\"} to=\"/\">\n            首頁\n          </NavButton>\n          <NavButton $active={path === \"/about\"} to=\"/about\">\n            關於我\n          </NavButton>\n          {user && (\n            <NavButton $active={path === \"/new-post\"} to=\"new-post\">\n              新增文章\n            </NavButton>\n          )}\n          {!user && (\n            <NavButton $active={path === \"/login\"} to=\"/login\">\n              登入\n            </NavButton>\n          )}\n          {!user && (\n            <NavButton $active={path === \"/register\"} to=\"/register\">\n              註冊\n            </NavButton>\n          )}\n          {user && <NavButton onClick={handleLogout}>登出</NavButton>}\n        </NavList>\n      </Navbar>\n    </Root>\n  );\n}\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getTotalPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getPosts = (page, limit) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=${limit}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const postPosts = (title, body) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { getPosts, getTotalPosts } from \"../../WebApi\";\nimport { MEDIA_QUERY_SM } from \"../../constants/breakpoint\";\n\nconst Root = styled.div``;\n\nconst PostsWrapper = styled.div`\n  height: 80vh;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  padding: 20px 20px;\n  margin: 0px 40px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.primaryLighter};\n\n  ${MEDIA_QUERY_SM} {\n    flex-direction: column;\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primaryDark};\n  font-size: ${(props) => props.theme.fontSize.fontMedium};\n  line-height: ${(props) => props.theme.fontSize.fontLarge};\n`;\n\nconst PostDate = styled.div`\n  color: ${(props) => props.theme.colors.primary};\n  font-size: ${(props) => props.theme.fontSize.fontSmall};\n  line-height: ${(props) => props.theme.fontSize.fontLarge};\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nfunction Pagination({ setCurrentPage, currentPage, totalPages }) {\n  const handlePaginationClick = (e) => {\n    const page = e.target.innerText;\n    // 上一頁\n    if (page === \"prev\" && currentPage !== \"1\") {\n      return setCurrentPage(Number(currentPage) - 1);\n    }\n    // 下一頁\n    if (page === \"next\" && Number(currentPage) !== totalPages.length) {\n      return setCurrentPage(Number(currentPage) + 1);\n    }\n    // 第一頁\n    if (page === \"first\") {\n      return setCurrentPage(1);\n    }\n    // 最後一頁\n    if (page === \"last\") {\n      return setCurrentPage(totalPages.length);\n    }\n    // 按頁數\n    if (page !== \"prev\" && page !== \"next\") {\n      return setCurrentPage(page);\n    }\n  };\n\n  return (\n    <PaginationWrapper>\n      <PaginationButton onClick={handlePaginationClick}>first</PaginationButton>\n      <PaginationButton onClick={handlePaginationClick}>prev</PaginationButton>\n      {totalPages.map((page, index) => (\n        <PaginationButton key={index} onClick={handlePaginationClick}>\n          {page}\n        </PaginationButton>\n      ))}\n      <PaginationButton onClick={handlePaginationClick}>next</PaginationButton>\n      <PaginationButton onClick={handlePaginationClick}>last</PaginationButton>\n    </PaginationWrapper>\n  );\n}\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n`;\n\nconst PaginationButton = styled.button`\n  margin: 0 5px;\n  padding: 5px;\n  border: none;\n  border-radius: 3px;\n  color: ${(props) => props.theme.colors.primaryDarker};\n  background: ${(props) => props.theme.colors.primaryLighter};\n  font-size: ${(props) => props.theme.fontSize.fontSmall};\n  cursor: pointer;\n`;\n\nconst Loading = styled.div`\n  position: absolute;\n  margin-top: 200px;\n  padding: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  max-width: 240px;\n  border-radius: 20px;\n  background: ${(props) => props.theme.colors.primaryDark};\n\n  &:before {\n    content: \"Loading...\";\n    display: block;\n    text-align: center;\n    color: ${(props) => props.theme.colors.primaryLighter};\n    font-size: ${(props) => props.theme.fontSize.fontLarge};\n  }\n`;\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(\"1\");\n  const limit = 5;\n  const [totalPages, setTotalPages] = useState([]);\n  const [isPostsLoading, setIsPostsLoading] = useState(true);\n\n  // 拿總數 -> 頁數\n  useEffect(() => {\n    getTotalPosts().then((posts) => {\n      const total = Math.ceil(posts.length / limit);\n      for (let i = 1; i <= total; i++) {\n        setTotalPages((totalPages) => [...totalPages, i]);\n      }\n      setIsPostsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    getPosts(currentPage, limit).then((posts) => {\n      setPosts(posts);\n    });\n  }, [currentPage]);\n\n  return (\n    <Root>\n      {isPostsLoading && <Loading />}\n      {!isPostsLoading && (\n        <PostsWrapper>\n          {posts.map((post) => (\n            <Post key={post.id} post={post} />\n          ))}\n        </PostsWrapper>\n      )}\n      {!isPostsLoading && (\n        <Pagination\n          setCurrentPage={setCurrentPage}\n          currentPage={currentPage}\n          totalPages={totalPages}\n        />\n      )}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { login, getMe } from \"../../WebApi\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n`;\n\nconst LoginForm = styled.form`\n  max-width: 480px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 1px solid ${(props) => props.theme.colors.primaryLight};\n`;\n\nconst LoginInputWrapper = styled.div`\n  margin: auto;\n  width: 60%;\n\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nconst LoginInputTitle = styled.div`\n  color: ${(props) => props.theme.colors.primaryDark};\n`;\n\nconst LoginInput = styled.input`\n  box-sizing: border-box;\n  margin-top: 5px;\n  padding: 2px 5px;\n  width: 100%;\n  border: 1px solid ${(props) => props.theme.colors.primaryDark};\n  outline: none;\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 20px;\n  padding: 5px;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60%;\n  border: none;\n  color: ${(props) => props.theme.colors.primaryLighter};\n  background: ${(props) => props.theme.colors.primaryDark};\n  outline: none;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoadingLogin, setIsLoadingLogin] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoadingLogin) {\n      return;\n    }\n    setIsLoadingLogin(true);\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        setIsLoadingLogin(false);\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          setIsLoadingLogin(false);\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        setIsLoadingLogin(false);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginForm onSubmit={handleSubmit}>\n      <LoginInputWrapper>\n        <LoginInputTitle>username:</LoginInputTitle>\n        <LoginInput\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </LoginInputWrapper>\n      <LoginInputWrapper>\n        <LoginInputTitle>password:</LoginInputTitle>\n        <LoginInput\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </LoginInputWrapper>\n      <LoginButton>{isLoadingLogin ? \"登入中…\" : \"登入\"}</LoginButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </LoginForm>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getPost } from \"../../WebApi\";\n\nconst PostWrapper = styled.div`\n  margin: 40px;\n  padding: 20px;\n  border: 1px solid ${(props) => props.theme.colors.primaryLight};\n`;\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  padding-bottom: 10px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.primaryLight};\n  line-height: ${(props) => props.theme.fontSize.fontMedium};\n`;\n\nconst PostTitle = styled.div`\n  color: ${(props) => props.theme.colors.primaryDark};\n  font-size: ${(props) => props.theme.fontSize.fontMedium};\n`;\n\nconst PostDate = styled.div`\n  font-size: ${(props) => props.theme.fontSize.fontSmall};\n  color: ${(props) => props.theme.colors.primaryLight};\n`;\n\nconst PostContent = styled.div`\n  margin-top: 20px;\n  color: ${(props) => props.theme.colors.primaryDark};\n  line-height: ${(props) => props.theme.fontSize.fontLarge};\n  word-break: break-all;\n  text-align: justify;\n`;\n\nexport default function PostPage() {\n  let { slug } = useParams();\n  const [post, setPost] = useState();\n\n  useEffect(() => {\n    getPost(slug).then((post) => {\n      setPost(post);\n    });\n  }, [slug]);\n\n  return (\n    <div>\n      {post && (\n        <PostWrapper>\n          <PostHeader>\n            <PostTitle>{post.title}</PostTitle>\n            <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n          </PostHeader>\n          <PostContent>{post.body}</PostContent>\n        </PostWrapper>\n      )}\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { postPosts } from \"../../WebApi\";\n\nconst NewPostForm = styled.form`\n  max-width: 480px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 1px solid ${(props) => props.theme.colors.primaryLight};\n`;\n\nconst NewPostWrapper = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst NewPostTitle = styled.div`\n  min-width: 60px;\n  margin-right: 5px;\n  padding: 5px;\n  text-align: center;\n  font-size: ${(props) => props.theme.fontSize.fontSmall};\n  color: ${(props) => props.theme.colors.primaryLighter};\n  background: ${(props) => props.theme.colors.primaryDark};\n`;\n\nconst NewPostInput = styled.input`\n  box-sizing: border-box;\n  padding: 0 5px;\n  width: 100%;\n`;\n\nconst NewPostContent = styled.textarea`\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n`;\n\nconst NewPostButton = styled.button`\n  margin-top: 20px;\n  padding: 5px;\n  position: relative;\n  width: 100%;\n  border: none;\n  font-size: ${(props) => props.theme.fontSize.fontSmall};\n  color: ${(props) => props.theme.colors.primaryLighter};\n  background: ${(props) => props.theme.colors.primaryDark};\n  outline: none;\n  cursor: pointer;\n`;\n\nconst Error = styled.div`\n  color: red;\n`;\n\nexport default function NewPostPage() {\n  const history = useHistory();\n  const [newPostTitle, setNewPostTitle] = useState(\"\");\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [errorMessage] = useState(\"不得為空\");\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleNewPostSubmit = (e) => {\n    e.preventDefault();\n    setIsSubmit(true);\n    if (newPostTitle === \"\" || newPostContent === \"\") {\n      return;\n    }\n    postPosts(newPostTitle, newPostContent).then((response) => {\n      // {title: \"1\", body: \"1\", createdAt: 1605872648244, userId: 1, id: 59}\n      // 送到新增的文章的單一頁面\n      history.push(`/posts/${response.id}`);\n    });\n  };\n\n  return (\n    <NewPostForm onSubmit={handleNewPostSubmit}>\n      {isSubmit && newPostTitle === \"\" && <Error>{errorMessage}</Error>}\n      <NewPostWrapper>\n        <NewPostTitle>文章標題</NewPostTitle>\n        <NewPostInput\n          value={newPostTitle}\n          placeholder=\"請輸入文章標題\"\n          onChange={(e) => setNewPostTitle(e.target.value)}\n        />\n      </NewPostWrapper>\n      <NewPostContent\n        rows=\"20\"\n        value={newPostContent}\n        onChange={(e) => setNewPostContent(e.target.value)}\n      />\n      {isSubmit && newPostContent === \"\" && <Error>{errorMessage}</Error>}\n      <NewPostButton>送出文章</NewPostButton>\n    </NewPostForm>\n  );\n}\n","import styled from \"styled-components\";\n\nconst AboutWrapper = styled.form`\n  max-width: 480px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 1px solid ${(props) => props.theme.colors.primaryLight};\n`;\n\nconst AboutTitle = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.primaryLight};\n  text-align: center;\n  color: ${(props) => props.theme.colors.primaryDark};\n  font-size: ${(props) => props.theme.fontSize.fontTitle};\n  font-style: italic;\n`;\n\nconst AboutContent = styled.div`\n  margin-top: 24px;\n  padding: 0 20px;\n  text-align: justify;\n`;\n\nexport default function AboutPage() {\n  return (\n    <AboutWrapper>\n      <AboutTitle>about me</AboutTitle>\n      <AboutContent>\n        這個部落格充滿了大家拿來練習用的文章，但是不會看到大量的自拍照的部落格就是好的部落格。\n      </AboutContent>\n    </AboutWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { register, getMe } from \"../../WebApi\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n`;\n\nconst LoginForm = styled.form`\n  max-width: 480px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 1px solid ${(props) => props.theme.colors.primaryLight};\n`;\n\nconst LoginInputWrapper = styled.div`\n  margin: auto;\n  width: 60%;\n\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nconst LoginInputTitle = styled.div`\n  color: ${(props) => props.theme.colors.primaryDark};\n`;\n\nconst LoginInput = styled.input`\n  box-sizing: border-box;\n  margin-top: 5px;\n  padding: 2px 5px;\n  width: 100%;\n  border: 1px solid ${(props) => props.theme.colors.primaryDark};\n  outline: none;\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 20px;\n  padding: 5px;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60%;\n  border: none;\n  color: ${(props) => props.theme.colors.primaryLighter};\n  background: ${(props) => props.theme.colors.primaryDark};\n  outline: none;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoadingLogin, setIsLoadingLogin] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoadingLogin) {\n      return;\n    }\n\n    setIsLoadingLogin(true);\n    setErrorMessage(null);\n\n    register(nickname, username, password).then((data) => {\n      // 如果註冊失敗\n      if (data.ok === 0) {\n        setErrorMessage(data.message);\n        return;\n      }\n      // 註冊成功就幫登入\n      setAuthToken(data.token);\n      // 如果已經註冊成功應該可以直接 setUser? 不一定要 getMe\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          setIsLoadingLogin(false);\n          return setErrorMessage(response.message);\n        }\n        setUser(response.data);\n        setIsLoadingLogin(false);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <LoginForm onSubmit={handleSubmit}>\n      <LoginInputWrapper>\n        <LoginInputTitle>nickname:</LoginInputTitle>\n        <LoginInput\n          type=\"text\"\n          value={nickname}\n          onChange={(e) => setNickname(e.target.value)}\n        />\n      </LoginInputWrapper>\n      <LoginInputWrapper>\n        <LoginInputTitle>username:</LoginInputTitle>\n        <LoginInput\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </LoginInputWrapper>\n      <LoginInputWrapper>\n        <LoginInputTitle>password:</LoginInputTitle>\n        <LoginInput\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </LoginInputWrapper>\n      <LoginButton>{isLoadingLogin ? \"註冊中…\" : \"註冊\"}</LoginButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </LoginForm>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport HomePage from \"../../pages/HomePages\";\nimport LoginPage from \"../../pages/LoginPages\";\nimport PostPage from \"../../pages/PostPages\";\nimport NewPostPage from \"../../pages/NewPostPages\";\nimport AboutPage from \"../../pages/AboutPages\";\nimport RegisterPage from \"../../pages/RegisterPages\";\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebApi\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div``;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n          setIsLoading(false);\n        }\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          {!isLoading && <Header />}\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route exact path=\"/posts/:slug\">\n              <PostPage />\n            </Route>\n            <Route exact path=\"/new-post\">\n              <NewPostPage />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    primaryLighter: \"#dbeede\",\n    primaryLight: \"#B1B479\",\n    primary: \"#939650\",\n    primaryDark: \"#616138\",\n  },\n  fontSize: {\n    fontTitle: \"32px\",\n    fontLarge: \"24px\",\n    fontMedium: \"18px\",\n    fontSmall: \"14px\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}